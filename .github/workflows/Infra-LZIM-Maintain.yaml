#
# This workflow maintains the Landing Zone Identity Management (LZIM) Azure Function by adding useable identifiers to the LZIM storage table.
#

name: Infra-LZIM-Maintain

on:
  push:
    branches: [ none ]
  workflow_dispatch:
      inputs:
        orgid:
          type: string
          description: 'Organisation identifier (3-4 characters)'
          required: true
          default: 'abc'
        regionname:
          type: choice
          description: 'Azure region for deployment of resources'
          required: true
          default: 'uksouth'
          options:
            - "uksouth"
            - "ukwest"
        subname:
          type: string
          description: 'Subscription identifier (for resource naming)'
          required: true
          default: 'mp001'


jobs:
  maintain-azurefunction:
    runs-on: windows-latest
    steps:
      - name: Check out repository under $GITHUB_WORKSPACE, so job can access it
        uses: actions/checkout@v2

      - name: Log on to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          
      - name: Maintain Function App
        uses: azure/powershell@v1
        with: 
          inlineScript: |      
            # This script calls the LZIM Azure Function App (Add-LzId function) using the REST API to add a range of
            # Azure Landing Zone identifiers for a given environment (e.g. production/test/dev/staging/QA).
            # These ids can then be requested individually using the Get-LzId function for new Azure Landing Zones.
            #
            
            #
            # Get supplied parameters
            #
            $orgId = '${{ github.event.inputs.orgid }}'
            $lzimSubName = '${{ github.event.inputs.subname }}'
            $regionName = '${{ github.event.inputs.regionname }}'
            if ($regionName -eq 'ukwest') {
              $regionId = 'ukw'
            }
            Else {
              $regionId = 'uks'
            }   
            function Add-Lzim-Records {
                param (
                    $Environment,
                    $Number
                )
                $faName = "fa-$orgId-$lzimSubName-$regionId-lzim"
                $faRg = "rg-$orgId-$lzimSubName-$regionId-lzim"
                $faId = (Get-AzWebApp -Name $faName -ResourceGroupName $faRg).Id 
                $faFunction = 'Add-LZIM-Id'
                $faFunctionKey = (Invoke-AzResourceAction -ResourceId "$faId/functions/$faFunction" -Action listkeys -Force).default
                $uri = 'https://' + $faName + '.azurewebsites.net/api/' + $faFunction + '?code=' + $faFunctionKey
                $body = @{
                    'InputObject' = @{
                        'Environment' = $Environment
                        'Number' = $Number
                    }
                } | ConvertTo-Json 
                $params = @{
                    'Uri'         = $uri
                    'Method'      = 'POST'
                    'ContentType' = 'application/json'
                    'Body'        = $body
                }
                Write-Host "Adding" $number "landing zone identifiers for the" $environment "environment" 
                Invoke-RestMethod @params      
            }

            Add-Lzim-Records -Environment 'Dev' -Number 100
            Add-Lzim-Records -Environment 'Prod' -Number 100
            Add-Lzim-Records -Environment 'QA' -Number 100
            Add-Lzim-Records -Environment 'Staging' -Number 100
            Add-Lzim-Records -Environment 'Test' -Number 100
          azPSVersion: latest 
